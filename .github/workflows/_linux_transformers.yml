name: Linux Transformers Test

on:
  workflow_call:
    inputs:
      pytorch:
        required: false
        type: string
        default: 'nightly'
        description: Pytorch branch/commit
      python:
        required: false
        type: string
        default: '3.10'
        description: Python version
      runner:
        required: true
        type: string
        default: 'linux.idc.xpu'
        description: Runner label
      driver:
        required: false
        type: string
        default: 'lts'
        description: Driver lts/rolling
      nightly_whl:
        required: false
        type: string
        default: ''
        description: Pytorch nightly wheel version
      transformers:
        required: false
        type: string
        default: 'v4.47.0'
        description: Transformers version
      transformers_test:
        required: true
        type: string
        default: ''
        description: Test scope. `tests_py,tests_benchmark,tests_generation,tests_models,tests_pipelines,tests_trainer,tests_utils,backbone,tests_trainer_not_ray` Delimiter is comma

permissions: read-all

jobs:
  Torch-XPU-Transformers-Tests:
    runs-on: ${{ inputs.runner }} 
    env:
      NEOReadDebugKeys: ${{ inputs.driver == 'rolling' && '1' || '0' }}
      DisableScratchPages: ${{ inputs.driver == 'rolling' && '1' || '0' }}
      pytorch: ${{ github.event_name == 'schedule' && 'nightly' || inputs.pytorch }}
    steps:
      - name: Checkout torch-xpu-ops
        uses: actions/checkout@v4
      - name: Prepare Conda ENV
        run: |
          which conda && conda clean -ay
          conda remove --all -y -n huggingface_transformers_test || rm -rf $(dirname ${CONDA_EXE})/../envs/huggingface_transformers_test
          conda create -n huggingface_transformers_test python=${{ env.python }} cmake ninja -y
          source activate huggingface_transformers_test
          sudo apt-get install -y espeak-ng
          sudo apt-get install -y pkg-config libavformat-dev libavcodec-dev libavdevice-dev libavutil-dev libavfilter-dev libswscale-dev libswresample-dev
          pip install pandas scipy tqdm
      - name: Prepare Transformers
        run: |
          pwd
          source activate huggingface_transformers_test
          cd ..
          git clone https://github.com/huggingface/transformers.git
          cd transformers && git checkout $(echo ${{ inputs.transformers }})
          pip install -e .
          pip install -e ".[dev-torch,testing,video]"
          mkdir -p tests_log
          cp ${{ github.workspace }}/.github/scripts/spec.py ./
      - name: Prepare Stock Pytorch
        id: installed
        run: |
          pwd
          source activate huggingface_transformers_test
          if [ -z ${{ inputs.nightly_whl }} ]; then
            pip install torch torchvision torchaudio --force --pre --index-url https://download.pytorch.org/whl/nightly/xpu
          else
            pip install torch==$(echo ${{ inputs.nightly_whl }}) torchvision torchaudio --force --pre --index-url https://download.pytorch.org/whl/nightly/xpu
          fi
          echo "TORCH_BRANCH_ID=$(python -c 'import torch; print(torch.__version__)')" |tee -a "${GITHUB_OUTPUT}" >> "${GITHUB_ENV}"
          echo "TORCH_COMMIT_ID=$(python -c 'import torch; print(torch.version.git_version)')" |tee -a "${GITHUB_OUTPUT}" >> "${GITHUB_ENV}"
          pip install pytest-pspec accelerate==1.1.1 timm sentencepiece librosa soundfile
          sudo apt install -y git-lfs
          git lfs install
          pip list >> ${{ github.workspace }}/../transformers/tests_log/pip_list.txt
          cat /sys/class/drm/render*/device/device >> ${{ github.workspace }}/../transformers/tests_log/device_IDs.txt
      - name: Run XPU tests/benchmark
        if: contains(input.transformers_test, 'tests_benchmark') || github.event_name == 'schedule'
        run: |
          source activate huggingface_transformers_test
          cd ../transformers
          TRANSFORMERS_TEST_DEVICE_SPEC=spec.py python3 -m pytest -rsf --make-reports=tests_benchmark tests/benchmark | tee tests_log/tests_benchmark.log
      - name: Upload Test log
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: Torch-XPU-Windows-Log-${{ github.event.pull_request.number || github.sha }}
          path: | 
            ${{ github.workspace }}/../transformers/reports
            ${{ github.workspace }}/../transformers/tests_log
