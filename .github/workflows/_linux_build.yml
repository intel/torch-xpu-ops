name: Linux PyTorch XPU Build

on:
  workflow_call:
    inputs:
      pytorch:
        required: true
        type: string
        default: 'main'
        description: Pytorch branch/commit
      keep_torch_xpu_ops:
        required: false
        type: string
        default: 'false'
        description: Keep torch-xpu-ops pin. `true` means use pined commit
      driver:
        required: false
        type: string
        default: 'lts'
        description: Driver lts/rolling
      python:
        required: false
        type: string
        default: '3.10'
        description: Python version
      runner:
        required: true
        type: string
        default: 'linux.idc.xpu'
        description: Runner label
      triton:
        required: false
        type: string
        default: ''
        description: Triton commit. Use pytorch pined commit by default
    outputs:
      torch_commit_id:
        description: The commit id of the torch build
        value: ${{ jobs.build.outputs.TORCH_COMMIT_ID }}

permissions: read-all

jobs:
  build:
    runs-on: ${{ inputs.runner }}
    container:
      image: 'pytorch/manylinux2_28-builder:xpu-main'
      volumes:
        - ${{ github.workspace }}:${{ github.workspace }}
      env:
        PATH: /opt/xpu-build/bin:/usr/share/Modules/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        commit_issue: 1280
        GH_TOKEN: ${{ github.token }}
        NEOReadDebugKeys: ${{ inputs.driver == 'rolling' && '1' || '0' }}
        DisableScratchPages: ${{ inputs.driver == 'rolling' && '1' || '0' }}
    outputs:
      TORCH_COMMIT_ID: ${{ steps.build_version.outputs.TORCH_COMMIT_ID }}
    timeout-minutes: 300
    steps:
      - name: Setup based env
        run: |
          # Cleanup workspace
          rm -rf ${{ github.workspace }}/*
          # Install gh
          dnf install 'dnf-command(config-manager)'
          dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
          dnf autoremove -y git236* && dnf install -y git
          dnf install gh --repo gh-cli -y
          # Setup python
          local_python=$(echo ${{ inputs.python }} |awk -F. '{printf("cp%s%s-cp%s%s", $1, $2, $1, $2)}')
          /opt/python/${local_python}/bin/python -m venv /opt/xpu-build
          which python && python -V && pip list
          pip install -U pip wheel setuptools
      - name: Checkout torch-xpu-ops
        uses: actions/checkout@v4
        with:
          path: torch-xpu-ops
      - name: Build Triton XPU
        run: |
          # gcc 13
          dnf install -y gcc-toolset-13-gcc-c++
          source /opt/rh/gcc-toolset-13/enable
          dnf install -y zlib-devel
          cd ../ && rm -rf pytorch
          git clone https://github.com/pytorch/pytorch pytorch
          cd pytorch
          if [ -z ${{ inputs.triton }} ]; then
            TRITON_COMMIT_ID="$(<.ci/docker/ci_commit_pins/triton-xpu.txt)"
          else
            TRITON_COMMIT_ID="${{ inputs.triton }}"
          fi
          if [ "${{ inputs.pytorch }}" != "nightly_wheel" ]; then
            pip install cmake ninja pybind11
            rm -rf pytorch_triton_xpu-*.whl
            TRITON_VERSION_NAME="$(
              curl -sSL https://raw.githubusercontent.com/intel/intel-xpu-backend-for-triton/${TRITON_COMMIT_ID}/python/triton/__init__.py 2>&1 |\
                      grep '__version__' |head -n 1 |awk -F "'" '{print $2}'
            )"
            python .github/scripts/build_triton_wheel.py --device xpu --commit-hash ${TRITON_COMMIT_ID} --triton-version ${TRITON_VERSION_NAME}
            cp pytorch_triton_xpu-*.whl ${{ github.workspace }}
          fi
      - name: Build Pytorch XPU
        run: |
          set -xe -o pipefail
          if [ "${{ inputs.driver }}" == "lts" ]; then
              export TORCH_XPU_ARCH_LIST='pvc'
          fi
          if [[ "${{ inputs.pytorch }}" == *"https://"* ]];then
            PYTORCH_REPO="$(echo ${{ inputs.pytorch }} |sed 's/@.*//')"
            PYTORCH_VERSION="$(echo ${{ inputs.pytorch }} |sed 's/.*@//')"
          else
            PYTORCH_REPO="https://github.com/pytorch/pytorch.git"
            PYTORCH_VERSION="${{ inputs.pytorch }}"
          fi
          if [[ "${{ inputs.keep_torch_xpu_ops }}" == *"https://"* ]];then
            TORCH_XPU_OPS_REPO="$(echo ${{ inputs.keep_torch_xpu_ops }} |sed 's/@.*//')"
            TORCH_XPU_OPS_VERSION="$(echo ${{ inputs.keep_torch_xpu_ops }} |sed 's/.*@//')"
          elif [ "${{ inputs.keep_torch_xpu_ops }}" == "true" ];then
            TORCH_XPU_OPS_VERSION="pinned"
          else
            TORCH_XPU_OPS_VERSION="cicd"
          fi
          # oneAPI DLE
          source ${{ github.workspace }}/torch-xpu-ops/.github/scripts/env.sh
          # gcc 11
          source /opt/rh/gcc-toolset-11/enable
          ${{ github.workspace }}/torch-xpu-ops/.github/scripts/build.sh \
            --WORKSPACE="${{ github.workspace }}" \
            --PYTORCH_REPO="${PYTORCH_REPO}" \
            --PYTORCH_VERSION="${PYTORCH_VERSION}" \
            --TORCH_XPU_OPS_REPO="${TORCH_XPU_OPS_REPO}" \
            --TORCH_XPU_OPS_VERSION="${TORCH_XPU_OPS_VERSION}" \
            2>&1 |tee ${{ github.workspace }}/pytorch_build_${PYTORCH_VERSION//\//-}.log
      - name: Torch Config
        run: |
          python -c "import torch; print(torch.__config__.show())"
          python -c "import torch; print(torch.__config__.parallel_info())"
          python -c "import torch; print(torch.__config__.torch.xpu.device_count())"
          python pytorch/torch/utils/collect_env.py
      - name: Identify Build version
        id: build_version
        run: |
          echo "TORCH_COMMIT_ID=$(python -c 'import torch; print(torch.version.git_version)')" |tee -a "${GITHUB_OUTPUT}"
      - name: Upload Torch XPU Wheel
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: Torch-XPU-Wheel-${{ github.event.pull_request.number || github.sha }}
          path: ${{ github.workspace }}/torch*.whl
      - name: Upload Triton Wheel
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: Triton-Wheel-${{ github.event.pull_request.number || github.sha }}
          path: ${{ github.workspace }}/pytorch_triton_xpu-*.whl
      - name: Upload Build Log
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: Torch-XPU-Build-Log-${{ github.event.pull_request.number || github.sha }}
          path: ${{ github.workspace }}/pytorch_*.log
      - name: Cleanup
        if: always()
        run: |
          chmod 777 . -R
          rm -rf pytorch torch-xpu-ops pytorch_*.log torch*.whl pytorch_triton_xpu-*.whl
