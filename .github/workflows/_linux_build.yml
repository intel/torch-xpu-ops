name: Linux PyTorch XPU Build

on:
  workflow_call:
    inputs:
      pytorch:
        required: true
        type: string
        default: 'main'
        description: Pytorch branch/commit
      keep_torch_xpu_ops:
        required: false
        type: string
        default: 'false'
        description: Keep torch-xpu-ops pin. `true` means use pined commit
      driver:
        required: false
        type: string
        default: 'lts'
        description: Driver lts/rolling
      python:
        required: false
        type: string
        default: '3.10'
        description: Python version
      runner:
        required: true
        type: string
        default: 'linux.idc.xpu'
        description: Runner label
      update_lkg:
        required: false
        type: string
        default: 'false'
        description: Whether update LKG torch version to issue #1280
    outputs:
      torch_commit_id:
        description: The commit id of the torch build
        value: ${{ jobs.build.outputs.TORCH_COMMIT_ID }}

permissions:
  issues: write

jobs:
  build:
    runs-on: ${{ inputs.runner }}
    outputs:
      TORCH_COMMIT_ID: ${{ steps.build_version.outputs.TORCH_COMMIT_ID }}
    timeout-minutes: 900
    env:
      commit_issue: 1280
      GH_TOKEN: ${{ github.token }}
      NEOReadDebugKeys: ${{ inputs.driver == 'rolling' && '1' || '0' }}
      DisableScratchPages: ${{ inputs.driver == 'rolling' && '1' || '0' }}
    steps:
      - name: Build Pytorch XPU
        run: |
          set -xe
          build_status="$(
            XPU_TORCH="https://github.com/pytorch/pytorch.git@${{ inputs.pytorch }}" \
              KEEP_TORCH_XPU_OPS="${{ inputs.keep_torch_xpu_ops }}" \
              XPU_DRIVER="${{ inputs.driver }}" \
              XPU_CONDA_ENV="xpu-build" \
              XPU_PYTHON="${{ inputs.python }}" \
              .github/scripts/build.sh \
              > ${{ github.workspace }}/pytorch_build_${{ inputs.pytorch }}.log 2>&1 && echo $? || echo $?
          )"
          build_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          repo="${{ github.repository }}"
          last_commit=$(gh --repo $repo issue view $commit_issue --json body -q .body | grep ${{ inputs.pytorch }} | cut -d'[' -f 2 | cut -d']' -f 1)
          cd ${GITHUB_WORKSPACE}/xpu-pytorch
          current_commit=$(git rev-parse HEAD)
          is_fork_pr=false
          if [ -n "${{ github.event.pull_request }}" ] && [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]; then
            is_fork_pr=true
          fi
          echo ">>>>>>>>>>>>Fork PR: ${is_fork_pr}, pytorch branch: ${{ inputs.pytorch }}, last commit: ${last_commit}, current commit: ${current_commit}"
          if [[ "${is_fork_pr}" == "false" ]]; then
            if [ "${build_status}" == "0" ] && \
                [ "${{ inputs.update_lkg }}" == "true" ] && \
                [ "${last_commit}" != "${current_commit}" ] && \
                [[ "${{ inputs.pytorch }}" == "main" || "${{ inputs.pytorch }}" == "release/"* ]]; then
              echo "Wheel build successful, update last commit in the issue https://github.com/intel/torch-xpu-ops/issues/1280"
              gh --repo $repo issue view $commit_issue --json body -q .body | sed "s;${last_commit};${current_commit};g" | sed '/^$/d' > new_body.txt
              gh --repo $repo issue edit $commit_issue --body-file new_body.txt
              gh --repo $repo issue comment $commit_issue -b "Update LKG torch, refer ${build_url}"
            fi
            if [ ! -f dist/torch*.whl ]; then
              echo "Wheel build failed, use last commit in the issue https://github.com/intel/torch-xpu-ops/issues/1280"
              gh --repo $repo issue comment $commit_issue -b "Wheel build failed with commit [${current_commit}](https://github.com/pytorch/pytorch/tree/${current_commit}), refer ${build_url}. CC @intel/torch-xpu-ops-maintain @EikanWang @riverliuintel @fengyuan14 @xytintel @etaf @chuanqi129 @mengfei25"
              build_status="$(
                XPU_TORCH="https://github.com/pytorch/pytorch.git@${last_commit}" \
                  KEEP_TORCH_XPU_OPS="${{ inputs.keep_torch_xpu_ops }}" \
                  XPU_DRIVER="${{ inputs.driver }}" \
                  XPU_CONDA_ENV="xpu-build" \
                  XPU_PYTHON="${{ inputs.python }}" \
                  .github/scripts/build.sh \
                  >> ${{ github.workspace }}/pytorch_build_${last_commit}.log 2>&1 && echo $? || echo $?
              )"
            fi
          else
            echo "Forked PR, don't update the issue"
          fi
          cp pytorch_build_*.log ${{ github.workspace }}/
          exit ${build_status}
      - name: Torch Config
        run: |
          source activate xpu-build
          source .github/scripts/env.sh ${{ inputs.pytorch }}
          python -c "import torch; print(torch.__config__.show())"
          python -c "import torch; print(torch.__config__.parallel_info())"
          python -c "import torch; print(torch.__config__.torch.xpu.device_count())"
          cd ..
          python pytorch/torch/utils/collect_env.py
      - name: Identify Build version
        id: build_version
        run: |
          source .github/scripts/env.sh
          cd ../pytorch
          echo "TORCH_BRANCH_ID=$(git rev-parse --abbrev-ref HEAD)" |tee -a "${GITHUB_OUTPUT}" >> "${GITHUB_ENV}"
          echo "TORCH_COMMIT_ID=$(git rev-parse HEAD)" |tee -a "${GITHUB_OUTPUT}" >> "${GITHUB_ENV}"
          echo "DRIVER_VERSION=$(sycl-ls |grep 'opencl:gpu' |awk '{print $NF}' |sort |uniq -c |sed 's/ //g;s/\[/*[/')" |tee -a "${GITHUB_OUTPUT}" >> "${GITHUB_ENV}"
          echo "KERNEL_VERSION=$(uname -rv 2>&1)" |tee -a "${GITHUB_OUTPUT}" >> "${GITHUB_ENV}"
          echo "BUNDLE_VERSION=$(icpx --version 2>&1 |grep 'DPC++/C++' |sed 's/.*(//;s/).*//')" |tee -a "${GITHUB_OUTPUT}" >> "${GITHUB_ENV}"
          . /etc/os-release
          echo "OS_PRETTY_NAME=${PRETTY_NAME}" |tee -a "${GITHUB_OUTPUT}" >> "${GITHUB_ENV}"
          echo "GCC_VERSION=$(gcc -dumpversion)" |tee -a "${GITHUB_OUTPUT}" >> "${GITHUB_ENV}"
          echo ${GITHUB_ENV}
      - name: Upload Torch XPU Wheel
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: Torch-XPU-Wheel-${{ github.event.pull_request.number || github.sha }}
          path: ${{ github.workspace }}/torch*.whl
      - name: Upload Build Log
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: Torch-XPU-Build-Log-${{ github.event.pull_request.number || github.sha }}
          path: ${{ github.workspace }}/pytorch_*.log
