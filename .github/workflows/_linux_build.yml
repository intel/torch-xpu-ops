name: Linux PyTorch XPU Build

on:
  workflow_call:
    inputs:
      pytorch:
        required: true
        type: string
        default: 'main'
        description: Pytorch branch/commit
      keep_torch_xpu_ops:
        required: false
        type: string
        default: 'false'
        description: Keep torch-xpu-ops pin. `true` means use pined commit
      driver:
        required: false
        type: string
        default: 'lts'
        description: Driver lts/rolling
      python:
        required: false
        type: string
        default: '3.10'
        description: Python version
      runner:
        required: true
        type: string
        default: 'linux.idc.xpu'
        description: Runner label
      update_lkg:
        required: false
        type: string
        default: 'false'
        description: Whether update LKG torch version to issue #1280
    outputs:
      torch_commit_id:
        description: The commit id of the torch build
        value: ${{ jobs.build.outputs.TORCH_COMMIT_ID }}

permissions:
  issues: write

jobs:
  build:
    runs-on: ${{ inputs.runner }}
    container:
      image: 'pytorch/manylinux2_28-builder:xpu-main'
      volumes:
        - ${{ github.workspace }}:${{ github.workspace }}
      env:
        PATH: /opt/xpu-build/bin:/usr/share/Modules/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        commit_issue: 1280
        GH_TOKEN: ${{ github.token }}
        NEOReadDebugKeys: ${{ inputs.driver == 'rolling' && '1' || '0' }}
        DisableScratchPages: ${{ inputs.driver == 'rolling' && '1' || '0' }}
    outputs:
      TORCH_COMMIT_ID: ${{ steps.build_version.outputs.TORCH_COMMIT_ID }}
    timeout-minutes: 900
    steps:
      - name: Setup based env
        run: |
          # Cleanup workspace
          rm -rf ${{ github.workspace }}/*
          # Install gh
          dnf install 'dnf-command(config-manager)'
          dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
          dnf autoremove -y git236* && dnf install -y git
          dnf install gh --repo gh-cli -y
          # Setup python
          local_python=$(echo ${{ inputs.python }} |awk -F. '{printf("cp%s%s-cp%s%s", $1, $2, $1, $2)}')
          /opt/python/${local_python}/bin/python -m venv /opt/xpu-build
          which python && python -V && pip list
          pip install -U pip wheel setuptools
      - name: Checkout torch-xpu-ops
        uses: actions/checkout@v4
        with:
          path: torch-xpu-ops
      - name: Build Pytorch XPU
        run: |
          set -xe
          if [ "${{ inputs.driver }}" == "lts" ]; then
              export TORCH_XPU_ARCH_LIST='pvc'
          fi
          if [[ "${{ inputs.pytorch }}" == *"https://"* ]];then
            PYTORCH_REPO="$(echo ${{ inputs.pytorch }} |sed 's/@.*//')"
            PYTORCH_VERSION="$(echo ${{ inputs.pytorch }} |sed 's/.*@//')"
          else
            PYTORCH_REPO="https://github.com/pytorch/pytorch.git"
            PYTORCH_VERSION="${{ inputs.pytorch }}"
          fi
          if [[ "${{ inputs.keep_torch_xpu_ops }}" == *"https://"* ]];then
            TORCH_XPU_OPS_REPO="$(echo ${{ inputs.keep_torch_xpu_ops }} |sed 's/@.*//')"
            TORCH_XPU_OPS_VERSION="$(echo ${{ inputs.keep_torch_xpu_ops }} |sed 's/.*@//')"
          elif [ "${{ inputs.keep_torch_xpu_ops }}" == "true" ];then
            TORCH_XPU_OPS_VERSION="pytorch-pinned"
          else
            TORCH_XPU_OPS_VERSION="ci-nightly"
          fi
          # oneAPI DLE
          source ${{ github.workspace }}/torch-xpu-ops/.github/scripts/env.sh
          icpx --version
          # gcc 11
          source /opt/rh/gcc-toolset-11/enable
          build_status="$(
              ${{ github.workspace }}/torch-xpu-ops/.github/scripts/build.sh \
                --WORKSPACE="${{ github.workspace }}" \
                --PYTORCH_REPO="${PYTORCH_REPO}" \
                --PYTORCH_VERSION="${PYTORCH_VERSION}" \
                --TORCH_XPU_OPS_REPO="${TORCH_XPU_OPS_REPO}" \
                --TORCH_XPU_OPS_VERSION="${TORCH_XPU_OPS_VERSION}" \
              > ${{ github.workspace }}/pytorch_build_${PYTORCH_VERSION}.log 2>&1 && echo $? || echo $?
          )"
          tail -n 100 ${{ github.workspace }}/pytorch_build_${PYTORCH_VERSION}.log
          build_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          repo="${{ github.repository }}"
          last_commit=$(gh --repo $repo issue view $commit_issue --json body -q .body | grep ${{ inputs.pytorch }} | cut -d'[' -f 2 | cut -d']' -f 1)
          current_commit=$(cat ${{ github.workspace }}/pytorch.commit)
          is_fork_pr=false
          if [ -n "${{ github.event.pull_request }}" ] && [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]; then
            is_fork_pr=true
          fi
          echo ">>>>>>>>>>>>Fork PR: ${is_fork_pr}, pytorch branch: ${{ inputs.pytorch }}, last commit: ${last_commit}, current commit: ${current_commit}"
          if [[ "${is_fork_pr}" == "false" ]]; then
            if [ "${build_status}" == "0" ] && \
                [ "${{ inputs.update_lkg }}" == "true" ] && \
                [ "${last_commit}" != "${current_commit}" ] && \
                [[ "${{ inputs.pytorch }}" == "main" || "${{ inputs.pytorch }}" == "release/"* ]]; then
              echo "Wheel build successful, update last commit in the issue https://github.com/intel/torch-xpu-ops/issues/1280"
              gh --repo $repo issue view $commit_issue --json body -q .body | sed "s;${last_commit};${current_commit};g" | sed '/^$/d' > new_body.txt
              gh --repo $repo issue edit $commit_issue --body-file new_body.txt
              gh --repo $repo issue comment $commit_issue -b "Update LKG torch, refer ${build_url}"
            fi
            if [ ! -f dist/torch*.whl ] && [ "${TORCH_XPU_OPS_VERSION}" == "ci-nightly" ]; then
              echo "Wheel build failed, use last commit in the issue https://github.com/intel/torch-xpu-ops/issues/1280"
              gh --repo $repo issue comment $commit_issue -b "Wheel build failed with commit [${current_commit}](https://github.com/pytorch/pytorch/tree/${current_commit}), refer ${build_url}. CC @intel/torch-xpu-ops-maintain @EikanWang @riverliuintel @fengyuan14 @xytintel @etaf @chuanqi129 @mengfei25"
              build_status="$(
                ${{ github.workspace }}/torch-xpu-ops/.github/scripts/build.sh \
                --WORKSPACE="${{ github.workspace }}" \
                --PYTORCH_REPO="https://github.com/pytorch/pytorch.git" \
                --PYTORCH_VERSION="${last_commit}" \
                --TORCH_XPU_OPS_REPO="${TORCH_XPU_OPS_REPO}" \
                --TORCH_XPU_OPS_VERSION="${TORCH_XPU_OPS_VERSION}" \
                  >> ${{ github.workspace }}/pytorch_build_${last_commit}.log 2>&1 && echo $? || echo $?
              )"
              tail -n 100 ${{ github.workspace }}/pytorch_build_${last_commit}.log
            fi
          else
            echo "Forked PR, don't update the issue"
          fi
          exit ${build_status}
      - name: Torch Config
        run: |
          python -c "import torch; print(torch.__config__.show())"
          python -c "import torch; print(torch.__config__.parallel_info())"
          python -c "import torch; print(torch.__config__.torch.xpu.device_count())"
          python pytorch/torch/utils/collect_env.py
      - name: Identify Build version
        id: build_version
        run: |
          echo "TORCH_COMMIT_ID=$(python -c 'import torch; print(torch.version.git_version)')" |tee -a "${GITHUB_OUTPUT}"
      - name: Upload Torch XPU Wheel
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: Torch-XPU-Wheel-${{ github.event.pull_request.number || github.sha }}
          path: ${{ github.workspace }}/torch*.whl
      - name: Upload Build Log
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: Torch-XPU-Build-Log-${{ github.event.pull_request.number || github.sha }}
          path: ${{ github.workspace }}/pytorch_*.log
      - name: Cleanup
        if: always()
        run: |
          rm -rf ${{ github.workspace }}/pytorch ${{ github.workspace }}/torch-xpu-ops \
                  ${{ github.workspace }}/pytorch_*.log ${{ github.workspace }}/torch*.whl
