name: Linux OP Benchmark Test

on:
  workflow_call:
    inputs:
      pytorch:
        required: false
        type: string
        default: 'main'
        description: Pytorch branch/commit
      keep_torch_xpu_ops:
        required: false
        type: string
        default: 'false'
        description: Keep torch-xpu-ops pin. `true` means use pined commit
      triton:
        required: false
        type: string
        default: ''
        description: Triton commit. Use pytorch pined commit by default
      python:
        required: false
        type: string
        default: '3.10'
        description: Python version
      runner:
        required: true
        type: string
        default: 'linux.idc.xpu'
        description: Runner label
      driver:
        required: false
        type: string
        default: 'rolling'
        description: Driver lts/rolling

permissions: read-all

jobs:
  op_benchmark_test:
    runs-on: ${{ inputs.runner }} 
    timeout-minutes: 900
    env:
      GH_TOKEN: ${{ github.token }}
      NEOReadDebugKeys: ${{ inputs.driver == 'rolling' && '1' || '0' }}
      DisableScratchPages: ${{ inputs.driver == 'rolling' && '1' || '0' }}
    steps:
      - name: Checkout Torch-xpu-ops
        uses: actions/checkout@v4
      - name: Download PyTorch Wheel
        if: ${{ inputs.pytorch != 'nightly_wheel' }}
        uses: actions/download-artifact@v4
        with:
          name: Torch-XPU-Wheel-${{ github.event.pull_request.number || github.sha }}
      - name: Prepare Test Env
        run: |
          set -xe -o pipefail
          PYTORCH_REPO="https://github.com/pytorch/pytorch.git"
          if [ "${{ inputs.pytorch }}" == "nightly_wheel" ]; then
            PYTORCH_VERSION="nightly"
          else
            PYTORCH_VERSION="main"
          fi
          chmod +x ./.github/scripts/setup_test_env.sh
          ./.github/scripts/setup_test_env.sh --WORKSPACE="${{ github.workspace }}" \
                --CONDA_ENV="xpu_op_${ZE_AFFINITY_MASK}" \
                --PYTHON_VERSION="${{ inputs.python }}" \
                --PYTORCH_REPO="${PYTORCH_REPO}" \
                --PYTORCH_VERSION="${PYTORCH_VERSION}"
      - name: Run Torch XPU Op Benchmark
        if: ${{ inputs.driver == 'rolling' }} 
        run: |
          source activate xpu_op_${ZE_AFFINITY_MASK}
          mkdir -p ${{ github.workspace }}/op_benchmark
          cd test/microbench
          filename=$(find -- *.py)
          for i in $filename
          do
            python ${i%.*}.py > ${{ github.workspace }}/op_benchmark/${i%.*}.log
          done
          # Summary forward op time
          bash ${{ github.workspace }}/.github/scripts/microbench_summary.sh ${{ github.workspace }}/op_benchmark ${{ github.workspace }}/op_benchmark/forward_op_summary.csv
          # Summary backward op time
          bash ${{ github.workspace }}/.github/scripts/microbench_summary.sh ${{ github.workspace }}/op_benchmark ${{ github.workspace }}/op_benchmark/backward_op_summary.csv True
      - name: Upload Inductor XPU OP benchmark Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Inductor-XPU-OP-Benchmark-Data-${{ github.event.pull_request.number || github.sha }}
          path: ${{ github.workspace }}/op_benchmark
