name: E2E Nightly_OnDemand Tests

on:
  schedule:
    # GMT+8 21:00 every day
    - cron: '0 13 * * *'
  workflow_dispatch:
    inputs:
      triton:
        required: false
        type: string
        default: ''
        description: Specify triton commit, use pytorch pined commit by default
      suite:
        required: true
        type: string
        default: 'huggingface'
        description: Dynamo benchmarks test suite. huggingface,timm_models,torchbench. Delimiter is comma
      dt:
        required: true
        type: string
        default: 'float32'
        description: Data precision of the test.float32,bfloat16,float16,amp_bf16,amp_fp16. Delimiter is comma
      mode:
        required: true
        type: string
        default: 'inference'
        description: inference,training. Delimiter is comma
      scenario:
        required: true
        type: string
        default: 'accuracy'
        description: accuracy,performance. Delimiter is comma


permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}-${{ github.ref_type == 'branch' && github.sha }}-${{ github.event_name == 'workflow_dispatch' }}-${{ github.event_name == 'schedule' }}-${{ inputs.suite }}-${{ inputs.dt }}-${{ inputs.mode }}-${{ inputs.secnario }}
  cancel-in-progress: true

jobs:
  Inductor-XPU-E2E-Nightly-Tests:
    runs-on: pvc_e2e
    timeout-minutes: 900
    steps:
      - name: Checkout torch-xpu-ops
        uses: actions/checkout@v4

  Tests-Failure-And-Report:
    if: always()
    runs-on: pvc_e2e
    permissions:
      issues: write
    env:
      GH_TOKEN: ${{ github.token }}
    needs: Inductor-XPU-E2E-Nightly-Tests
    steps:
      - name: Report github issue for XPU OPS nightly
        run: |
          if [ "${{ inputs.suite }}" != "" ];then
            report_issue_id=426
            test_type="On-demand"
          else
            report_issue_id=432
            test_type="Nightly"
          fi
          if [ "${{ needs.Inductor-XPU-E2E-Nightly-Tests.result }}" == "success" ];then
            test_status=Success
          elif [ "${{ needs.Inductor-XPU-E2E-Nightly-Tests.result }}" == "failure" ];then
            test_status=Failure
            cc_comment="CC ${{ secrets.NIGHTLY_EMAIL_LIST }}"
          else
            test_status=None
          fi
          if [ "${{ inputs.suite }}" != "" ];then
            cc_comment="CC ${{ github.actor }}"
            test_scope="Inputs: triton=${{ inputs.triton }}; suite=${{ inputs.suite }}; dt=${{ inputs.dt }}; mode=${{ inputs.mode }}; scenario=${{ inputs.scenario }}"
            test_sw="SW info: XPU=${GITHUB_WORKFLOW_SHA} on ${GITHUB_REF_NAME}, Torch=${TORCH_COMMIT_ID} on ${TORCH_BRANCH_ID}"
            test_hw="HW info: Run on ${RUNNER_NAME} with DKMS=${DKMS_VERSION} and DPCPP=${DPCPP_VERSION}"
          fi
          build_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          repo="${{ github.repository }}"
          if [ "${test_status}" != "None" ];then
            gh --repo $repo issue comment $report_issue_id --body "$cc_comment
                  $(date +'%F') $test_type Test Status: ${test_status}
                  See: $build_url
                  $test_scope
                  $test_sw
                  $test_hw"
          fi
