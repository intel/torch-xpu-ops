name: E2E CI Tests

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]
    types: [checks_requested]

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  Inductor-XPU-E2E-CI-Tests:
    runs-on: pvc_e2e
    steps:
      - name: Checkout torch-xpu-ops
        uses: actions/checkout@v4
      - name: Prepare Conda ENV
        run: |
          which conda
          if conda env list | grep -q "^e2e_ci "; then source activate e2e_ci; else conda create -n e2e_ci python=3.8 cmake ninja -y; fi
          conda install intel::mkl-static intel::mkl-include -y
          pip install pandas scipy tqdm
      - name: Prepare Stock Pytorch
        run: |
          pwd
          cd ../ && rm -rf pytorch
          git clone -b e2e-baseline https://github.com/etaf/pytorch-inductor-xpu pytorch
          cd pytorch && git log -n 1 && git submodule sync && git submodule update --init --recursive
          rm -rf third_party/torch-xpu-ops && cp -r ../torch-xpu-ops third_party/
          # Workaround for torch-xpu-ops ci test
          sed -i "s/checkout --quiet \${TORCH_XPU_OPS_COMMIT}/log -n 1/g" caffe2/CMakeLists.txt
      - name: Triton Installation
        run: |
          source activate e2e_ci
          TRITON_REPO="https://github.com/intel/intel-xpu-backend-for-triton"
          TRITON_PINNED_COMMIT=$(cat .github/ci_commit_pins/triton.txt)
          echo ${TRITON_REPO}@${TRITON_PINNED_COMMIT}
          pip install --force-reinstall "git+${TRITON_REPO}@${TRITON_PINNED_COMMIT}#subdirectory=python"
      - name: Build Pytorch XPU
        run: |
          source activate e2e_ci
          cd ../pytorch
          pip install -r requirements.txt
          export USE_XPU=1
          export PYTORCH_XPU_FALLBACK_OP=rsub.Scalar
          source /opt/intel/oneapi/compiler/latest/env/vars.sh
          export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
          python setup.py bdist_wheel
          pip install --force-reinstall dist/*.whl
      - name: Identify pinned versions
        run: |
          cd ../pytorch
          echo "TORCHVISION_COMMIT_ID=$(<.github/ci_commit_pins/vision.txt)" >> "${GITHUB_ENV}"
          echo "TORCHTEXT_COMMIT_ID=$(<.github/ci_commit_pins/text.txt)" >> "${GITHUB_ENV}"
          echo "TORCHAUDIO_COMMIT_ID=$(<.github/ci_commit_pins/audio.txt)" >> "${GITHUB_ENV}"
          echo "TRANSFORMERS_VERSION=$(<.ci/docker/ci_commit_pins/huggingface.txt)" >> "${GITHUB_ENV}"
          echo "TIMM_COMMIT_ID=$(<.ci/docker/ci_commit_pins/timm.txt)" >> "${GITHUB_ENV}"
      - name: Show GITHUB_ENV
        run: echo "$GITHUB_ENV"
      - name: HF FP32 Inference Accuracy Test
        uses: ./.github/actions/inductor-xpu-e2e-test
        with:
          suite: huggingface
          env_prepare: true
          dt: float32
          mode: inference
          scenario: accuracy
          expected_pass_num: 44
      - name: HF BF16 Inference Accuracy Test
        uses: ./.github/actions/inductor-xpu-e2e-test
        with:
          suite: huggingface
          dt: bfloat16
          mode: inference
          scenario: accuracy
          expected_pass_num: 45
