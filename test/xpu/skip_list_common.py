skip_dict = {
    "test_ops_xpu.py": (
        # Skip list of base line
        # XPU implementation doesn't claimn FP8 now
        # https://github.com/intel/torch-xpu-ops/issues/461
        "float8",
        # workarounds for the following tests
        # https://github.com/intel/torch-xpu-ops/issues/1214
        # "test_python_ref__refs_exp_xpu_complex128",
        "test_python_ref__refs_sigmoid_xpu_complex128",
        "test_python_ref_executor__refs_log2_executor_aten_xpu_complex128",
        "test_python_ref_executor__refs_exp_executor_aten_xpu_complex128",
        "test_python_ref_torch_fallback__refs_log2_xpu_complex128",
        "test_python_ref_torch_fallback__refs_log10_xpu_complex128",
        "test_python_ref_torch_fallback__refs_sigmoid_xpu_complex128",
        "test_python_ref_executor__refs_log10_executor_aten_xpu_complex128",
        "test_noncontiguous_samples_histogram_xpu_float32",
        "test_python_ref_executor__refs_sigmoid_executor_aten_xpu_complex128",
        # TODO: Fix the following tests
        "test_out_warning_torch__scaled_mm_xpu",
        # To be removed from this file.
        # CUDA and XPU both XFAIL now.
        "test_out_narrow_copy_xpu_float32",
        # This case is marked as skip but XPU failed. However, CUDA and XPU throw the same runtime error.
        "test_out_histc_xpu_float32",
        # Data type is not supported in oneDNN!
        "test_dtypes_nn_functional_conv1d_xpu",
        "test_dtypes_nn_functional_conv2d_xpu",
        "test_dtypes_nn_functional_conv3d_xpu",
        "test_dtypes_nn_functional_conv_transpose1d_xpu",
        "test_dtypes_nn_functional_conv_transpose2d_xpu",
        "test_dtypes_nn_functional_conv_transpose3d_xpu",
        # AssertionError: The supported dtypes for nn.functional.softsign on device type xpu are incorrect!
        "test_dtypes_nn_functional_softsign_xpu",
        # AssertionError: The supported dtypes for sparse.sampled_addmm on device type xpu are incorrect! - OPs not supported
        "test_dtypes_sparse_sampled_addmm_xpu",
        # OPs not supported
        # "test_errors_dot_xpu",
        "test_errors_vdot_xpu",
        # Linalg OPs not supported
        "test_noncontiguous_samples_linalg_det_xpu_float32",
        "test_noncontiguous_samples_linalg_slogdet_xpu_float32",
        "test_noncontiguous_samples_linalg_solve_ex_xpu_float32",
        "test_noncontiguous_samples_linalg_solve_xpu_float32",
        "test_noncontiguous_samples_linalg_tensorsolve_xpu_float32",
        "test_noncontiguous_samples_logdet_xpu_float32",
        # Sparse CSR OPs not supported
        # RuntimeError: device type of values (xpu) must be CPU or CUDA or Meta
        # https://github.com/intel/torch-xpu-ops/issues/357
        # "test_compare_cpu_sparse_sampled_addmm_xpu_float32",
        "test_out_requires_grad_error_sparse_sampled_addmm_xpu_complex64",
        "test_out_requires_grad_error_sparse_sampled_addmm_xpu_float32",
        # OneDNN issues, https://github.com/intel/torch-xpu-ops/issues/253
        # RuntimeError: Long is not supported in oneDNN!
        # RuntimeError: could not create a primitive descriptor for a deconvolution forward propagation primitive
        # RuntimeError: Double and complex datatype matmul is not supported in oneDNN
        "test_noncontiguous_samples_nn_functional_conv3d_xpu_int64",
        "test_noncontiguous_samples_nn_functional_conv_transpose1d_xpu_int64",
        "test_noncontiguous_samples_nn_functional_conv_transpose2d_xpu_complex64",
        "test_noncontiguous_samples_nn_functional_conv_transpose2d_xpu_float32",
        "test_noncontiguous_samples_nn_functional_conv_transpose2d_xpu_int64",
        "test_noncontiguous_samples_nn_functional_conv_transpose3d_xpu_complex64",
        "test_noncontiguous_samples_nn_functional_conv_transpose3d_xpu_float32",
        "test_noncontiguous_samples_nn_functional_conv_transpose3d_xpu_int64",
        "test_noncontiguous_samples_nn_functional_conv1d_xpu_int64",
        "test_noncontiguous_samples_nn_functional_conv2d_xpu_int64",
        # Linalg OPs not supported
        # RuntimeError: mode only supports CPU AND CUDA device type, got: xpu
        # Issue https://github.com/intel/torch-xpu-ops/issues/327
        "test_numpy_ref_linalg_tensorinv_xpu_float64",
        # RuntimeError: could not create a primitive descriptor for a deconvolution
        # https://github.com/intel/torch-xpu-ops/issues/253
        "test_variant_consistency_eager_nn_functional_conv_transpose2d_xpu_complex64",
        "test_variant_consistency_eager_nn_functional_conv_transpose2d_xpu_float32",
        "test_variant_consistency_eager_nn_functional_conv_transpose3d_xpu_complex64",
        "test_variant_consistency_eager_nn_functional_conv_transpose3d_xpu_float32",
        # Linalg OPs not supported
        "test_compare_cpu_linalg_lu_factor_ex_xpu_float32",
        "test_compare_cpu_linalg_lu_factor_xpu_float32",
        "test_compare_cpu_linalg_lu_xpu_float32",
        # XPU hang. CUDA hang as well.
        # https://github.com/pytorch/pytorch/issues/79528
        "test_compare_cpu_special_hermite_polynomial_h_xpu_float32",
        # XFAIL of CUDA and XPU, unexpected success in fallback
        # Linalg OPs not supported
        "test_out_cholesky_inverse_xpu_float32",
        "test_out_geqrf_xpu_float32",
        "test_out_ormqr_xpu_float32",
        # XFAIL of CUDA, XPU got unexpected success
        "test_python_ref__refs_div_no_rounding_mode_xpu_complex32",
        "test_python_ref__refs_pow_xpu_complex32",
        "test_python_ref_executor__refs_mul_executor_aten_xpu_complex32",
        "test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_complex32",
        "test_python_ref__refs_pow_xpu_complex32",
        "test_python_ref_executor__refs_mul_executor_aten_xpu_complex32",
        "test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_complex32",
        "test_python_ref_torch_fallback__refs_pow_xpu_complex32",
        # unexpected success because of cpu fallback
        # Linalg OPs not supported
        "test_out_triangular_solve_xpu_float32",
        # Newly added:
        # Cuda skipped it
        "test_non_standard_bool_values_sort_xpu_bool",  # The implementation aligns with CUDA, RuntimeError: "sort" not implemented for 'Bool'.
        # Cuda XFAIL (stock pytorch commit: e7cf7d0)
        "test_non_standard_bool_values_argsort_xpu_bool",
        # Unexpected success
        "test_python_ref_executor__refs_pow_executor_aten_xpu_complex32",  # Didn't align with CUDA, Unexpected success
        # Unexpected success
        # "test_errors_histogramdd_xpu", #XFAIL now
        # Jiterator is only supported on CUDA and ROCm GPUs, none are available.
        # https://github.com/intel/torch-xpu-ops/issues/584
        "_jiterator_",
        # https://github.com/intel/torch-xpu-ops/issues/157
        # Segfault:
        "test_dtypes_nn_functional_multi_head_attention_forward_xpu",  # https://github.com/intel/torch-xpu-ops/issues/157
        # Linalg OPs not supported
        "test_dtypes_pca_lowrank_xpu",  # https://github.com/intel/torch-xpu-ops/issues/157
        "test_dtypes_svd_lowrank_xpu",  # https://github.com/intel/torch-xpu-ops/issues/157
        # RuntimeError: Long is not supported in oneDNN!
        "test_noncontiguous_samples_nn_functional_linear_xpu_int64",  # https://github.com/intel/torch-xpu-ops/issues/157
        # https://github.com/intel/torch-xpu-ops/issues/157
        # Datatype not supported in oneDNN
        "test_dtypes_addmm_decomposed_xpu",
        "test_dtypes_addmm_xpu",
        "test_dtypes_addmv_xpu",
        "test_dtypes_addr_xpu",
        "test_dtypes_baddbmm_xpu",
        "test_dtypes_cholesky_inverse_xpu",
        "test_dtypes_cholesky_solve_xpu",
        "test_dtypes_cholesky_xpu",
        "test_dtypes_corrcoef_xpu",
        "test_dtypes_cov_xpu",
        "test_dtypes_linalg_cholesky_ex_xpu",
        "test_dtypes_linalg_cholesky_xpu",
        "test_dtypes_linalg_cond_xpu",
        "test_dtypes_linalg_det_singular_xpu",
        "test_dtypes_linalg_det_xpu",
        "test_dtypes_linalg_eig_xpu",
        "test_dtypes_linalg_eigh_xpu",
        "test_dtypes_linalg_eigvals_xpu",
        "test_dtypes_linalg_eigvalsh_xpu",
        "test_dtypes_linalg_inv_ex_xpu",
        "test_dtypes_linalg_inv_xpu",
        "test_dtypes_linalg_ldl_factor_ex_xpu",
        "test_dtypes_linalg_ldl_factor_xpu",
        "test_dtypes_linalg_ldl_solve_xpu",
        "test_dtypes_linalg_lstsq_grad_oriented_xpu",
        "test_dtypes_linalg_lstsq_xpu",
        "test_dtypes_linalg_lu_factor_ex_xpu",
        "test_dtypes_linalg_lu_factor_xpu",
        "test_dtypes_linalg_lu_solve_xpu",
        "test_dtypes_linalg_lu_xpu",
        "test_dtypes_linalg_matrix_power_xpu",
        "test_dtypes_linalg_matrix_rank_hermitian_xpu",
        "test_dtypes_linalg_matrix_rank_xpu",
        "test_dtypes_linalg_pinv_hermitian_xpu",
        "test_dtypes_linalg_pinv_xpu",
        "test_dtypes_linalg_qr_xpu",
        "test_dtypes_linalg_slogdet_xpu",
        "test_dtypes_linalg_solve_ex_xpu",
        "test_dtypes_linalg_solve_xpu",
        "test_dtypes_linalg_svd_xpu",
        "test_dtypes_linalg_tensorinv_xpu",
        "test_dtypes_linalg_tensorsolve_xpu",
        "test_dtypes_logdet_xpu",
        "test_dtypes_lu_solve_xpu",
        "test_dtypes_lu_xpu",
        "test_dtypes_mv_xpu",
        "test_dtypes_nn_functional_scaled_dot_product_attention_xpu",
        "test_dtypes_norm_nuc_xpu",
        "test_dtypes_pinverse_xpu",
        "test_dtypes_qr_xpu",
        "test_dtypes_svd_xpu",
        "test_dtypes_tensordot_xpu",
        "test_dtypes_triangular_solve_xpu",
        "test_noncontiguous_samples___rmatmul___xpu_complex64",
        "test_noncontiguous_samples___rmatmul___xpu_int64",
        "test_noncontiguous_samples_addbmm_xpu_complex64",
        "test_noncontiguous_samples_addbmm_xpu_float32",
        "test_noncontiguous_samples_addbmm_xpu_int64",
        "test_noncontiguous_samples_addmm_decomposed_xpu_complex64",
        "test_noncontiguous_samples_addmm_decomposed_xpu_int64",
        "test_noncontiguous_samples_addmm_xpu_complex64",
        "test_noncontiguous_samples_addmm_xpu_float32",
        "test_noncontiguous_samples_addmm_xpu_int64",
        "test_noncontiguous_samples_addmv_xpu_complex64",
        "test_noncontiguous_samples_addmv_xpu_float32",
        "test_noncontiguous_samples_addmv_xpu_int64",
        "test_noncontiguous_samples_addr_xpu_complex64",
        "test_noncontiguous_samples_baddbmm_xpu_complex64",
        "test_noncontiguous_samples_baddbmm_xpu_int64",
        "test_noncontiguous_samples_bmm_xpu_complex64",
        "test_noncontiguous_samples_bmm_xpu_int64",
        "test_noncontiguous_samples_cholesky_inverse_xpu_complex64",
        "test_noncontiguous_samples_cholesky_solve_xpu_complex64",
        "test_noncontiguous_samples_cholesky_xpu_complex64",
        "test_noncontiguous_samples_corrcoef_xpu_complex64",
        "test_noncontiguous_samples_cov_xpu_complex64",
        "test_noncontiguous_samples_einsum_xpu_complex64",
        "test_noncontiguous_samples_einsum_xpu_int64",
        "test_noncontiguous_samples_geqrf_xpu_complex64",
        "test_noncontiguous_samples_inner_xpu_complex64",
        "test_noncontiguous_samples_inner_xpu_int64",
        "test_noncontiguous_samples_linalg_cholesky_ex_xpu_complex64",
        "test_noncontiguous_samples_linalg_cholesky_xpu_complex64",
        "test_noncontiguous_samples_linalg_cond_xpu_complex64",
        "test_noncontiguous_samples_linalg_det_xpu_complex64",
        "test_noncontiguous_samples_linalg_eig_xpu_complex64",
        "test_noncontiguous_samples_linalg_eig_xpu_float32",
        "test_noncontiguous_samples_linalg_eigh_xpu_complex64",
        "test_noncontiguous_samples_linalg_eigvals_xpu_complex64",
        "test_noncontiguous_samples_linalg_eigvalsh_xpu_complex64",
        "test_noncontiguous_samples_linalg_householder_product_xpu_complex64",
        "test_noncontiguous_samples_linalg_inv_ex_xpu_complex64",
        "test_noncontiguous_samples_linalg_inv_xpu_complex64",
        "test_noncontiguous_samples_linalg_ldl_factor_ex_xpu_complex64",
        "test_noncontiguous_samples_linalg_ldl_factor_xpu_complex64",
        "test_noncontiguous_samples_linalg_ldl_solve_xpu_complex64",
        "test_noncontiguous_samples_linalg_lstsq_grad_oriented_xpu_complex64",
        "test_noncontiguous_samples_linalg_lstsq_xpu_complex64",
        "test_noncontiguous_samples_linalg_lu_factor_ex_xpu_complex64",
        "test_noncontiguous_samples_linalg_lu_factor_xpu_complex64",
        "test_noncontiguous_samples_linalg_lu_solve_xpu_complex64",
        "test_noncontiguous_samples_linalg_lu_xpu_complex64",
        "test_noncontiguous_samples_linalg_matrix_norm_xpu_complex64",
        "test_noncontiguous_samples_linalg_matrix_power_xpu_complex64",
        "test_noncontiguous_samples_linalg_matrix_rank_hermitian_xpu_complex64",
        "test_noncontiguous_samples_linalg_matrix_rank_xpu_complex64",
        "test_noncontiguous_samples_linalg_norm_subgradients_at_zero_xpu_complex64",
        "test_noncontiguous_samples_linalg_norm_xpu_complex64",
        "test_noncontiguous_samples_linalg_pinv_hermitian_xpu_complex64",
        "test_noncontiguous_samples_linalg_pinv_singular_xpu_complex64",
        "test_noncontiguous_samples_linalg_pinv_xpu_complex64",
        "test_noncontiguous_samples_linalg_qr_xpu_complex64",
        "test_noncontiguous_samples_linalg_slogdet_xpu_complex64",
        "test_noncontiguous_samples_linalg_solve_ex_xpu_complex64",
        "test_noncontiguous_samples_linalg_solve_triangular_xpu_complex64",
        "test_noncontiguous_samples_linalg_solve_xpu_complex64",
        "test_noncontiguous_samples_linalg_svd_xpu_complex64",
        "test_noncontiguous_samples_linalg_svdvals_xpu_complex64",
        "test_noncontiguous_samples_linalg_tensorinv_xpu_complex64",
        "test_noncontiguous_samples_linalg_tensorsolve_xpu_complex64",
        "test_noncontiguous_samples_logdet_xpu_complex64",
        "test_noncontiguous_samples_lu_solve_xpu_complex64",
        "test_noncontiguous_samples_lu_xpu_complex64",
        "test_noncontiguous_samples_matmul_xpu_complex64",
        "test_noncontiguous_samples_matmul_xpu_int64",
        "test_noncontiguous_samples_mm_xpu_complex64",
        "test_noncontiguous_samples_mm_xpu_int64",
        "test_noncontiguous_samples_mv_xpu_complex64",
        "test_noncontiguous_samples_mv_xpu_int64",
        "test_noncontiguous_samples_nn_functional_bilinear_xpu_int64",
        "test_noncontiguous_samples_nn_functional_linear_xpu_complex64",
        "test_noncontiguous_samples_norm_nuc_xpu_complex64",
        "test_noncontiguous_samples_ormqr_xpu_complex64",
        "test_noncontiguous_samples_pinverse_xpu_complex64",
        "test_noncontiguous_samples_qr_xpu_complex64",
        "test_noncontiguous_samples_svd_xpu_complex64",
        "test_noncontiguous_samples_tensordot_xpu_complex64",
        "test_noncontiguous_samples_tensordot_xpu_int64",
        "test_noncontiguous_samples_triangular_solve_xpu_complex64",
        "test_numpy_ref_addbmm_xpu_complex128",
        "test_numpy_ref_addbmm_xpu_float64",
        "test_numpy_ref_addbmm_xpu_int64",
        "test_numpy_ref_linalg_tensorinv_xpu_complex128",
        "test_out_addbmm_xpu_float32",
        "test_out_addmm_xpu_float32",
        "test_out_addmv_xpu_float32",
        "test_out_baddbmm_xpu_float32",
        "test_out_mm_xpu_float32",
        "test_out_mv_xpu_float32",
        "test_out_requires_grad_error_addbmm_xpu_complex64",
        "test_out_requires_grad_error_addmm_decomposed_xpu_complex64",
        "test_out_requires_grad_error_addmm_xpu_complex64",
        "test_out_requires_grad_error_addmv_xpu_complex64",
        "test_out_requires_grad_error_baddbmm_xpu_complex64",
        "test_out_requires_grad_error_bmm_xpu_complex64",
        "test_out_requires_grad_error_cholesky_inverse_xpu_complex64",
        "test_out_requires_grad_error_cholesky_solve_xpu_complex64",
        "test_out_requires_grad_error_cholesky_xpu_complex64",
        "test_out_requires_grad_error_inner_xpu_complex64",
        "test_out_requires_grad_error_linalg_cholesky_ex_xpu_complex64",
        "test_out_requires_grad_error_linalg_cholesky_xpu_complex64",
        "test_out_requires_grad_error_linalg_det_singular_xpu_complex64",
        "test_out_requires_grad_error_linalg_eig_xpu_complex64",
        "test_out_requires_grad_error_linalg_eigh_xpu_complex64",
        "test_out_requires_grad_error_linalg_eigvals_xpu_complex64",
        "test_out_requires_grad_error_linalg_eigvalsh_xpu_complex64",
        "test_out_requires_grad_error_linalg_inv_ex_xpu_complex64",
        "test_out_requires_grad_error_linalg_inv_xpu_complex64",
        "test_out_requires_grad_error_linalg_lstsq_xpu_complex64",
        "test_out_requires_grad_error_linalg_lu_factor_xpu_complex64",
        "test_out_requires_grad_error_linalg_lu_solve_xpu_complex64",
        "test_out_requires_grad_error_linalg_multi_dot_xpu_complex64",
        "test_out_requires_grad_error_linalg_pinv_hermitian_xpu_complex64",
        "test_out_requires_grad_error_linalg_pinv_xpu_complex64",
        "test_out_requires_grad_error_linalg_qr_xpu_complex64",
        "test_out_requires_grad_error_linalg_solve_ex_xpu_complex64",
        "test_out_requires_grad_error_linalg_solve_xpu_complex64",
        "test_out_requires_grad_error_linalg_tensorinv_xpu_complex64",
        "test_out_requires_grad_error_lu_solve_xpu_complex64",
        "test_out_requires_grad_error_lu_xpu_complex64",
        "test_out_requires_grad_error_mm_xpu_complex64",
        "test_out_requires_grad_error_mv_xpu_complex64",
        "test_out_requires_grad_error_nn_functional_linear_xpu_complex64",
        "test_out_requires_grad_error_qr_xpu_complex64",
        "test_out_requires_grad_error_tensordot_xpu_complex64",
        "test_out_requires_grad_error_triangular_solve_xpu_complex64",
        "test_out_warning_addmm_decomposed_xpu",
        "test_out_warning_addmm_xpu",
        "test_out_warning_addmv_xpu",
        "test_out_warning_baddbmm_xpu",
        "test_out_warning_bmm_xpu",
        "test_out_warning_matmul_xpu",
        "test_out_warning_mm_xpu",
        "test_out_warning_mv_xpu",
        "test_out_warning_nn_functional_linear_xpu",
        "test_python_ref__refs_linalg_svd_xpu_complex128",
        "test_python_ref__refs_linalg_svd_xpu_complex64",
        "test_python_ref__refs_linalg_svd_xpu_float64",
        "test_python_ref_executor__refs_linalg_svd_executor_aten_xpu_complex128",
        "test_python_ref_executor__refs_linalg_svd_executor_aten_xpu_complex64",
        "test_python_ref_executor__refs_linalg_svd_executor_aten_xpu_float64",
        "test_python_ref_executor__refs_nn_functional_pdist_executor_aten_xpu_float64",
        "test_python_ref_meta__refs_linalg_svd_xpu_complex128",
        "test_python_ref_meta__refs_linalg_svd_xpu_complex64",
        "test_python_ref_meta__refs_linalg_svd_xpu_float64",
        "test_python_ref_meta__refs_nn_functional_pdist_xpu_float64",
        "test_python_ref_torch_fallback__refs_linalg_svd_xpu_complex128",
        "test_python_ref_torch_fallback__refs_linalg_svd_xpu_complex64",
        "test_python_ref_torch_fallback__refs_linalg_svd_xpu_float64",
        "test_python_ref_torch_fallback__refs_nn_functional_pdist_xpu_float64",
        "test_variant_consistency_eager___rmatmul___xpu_complex64",
        "test_variant_consistency_eager_addmm_decomposed_xpu_complex64",
        "test_variant_consistency_eager_addmm_xpu_complex64",
        "test_variant_consistency_eager_addmm_xpu_float32",
        "test_variant_consistency_eager_addmv_xpu_complex64",
        "test_variant_consistency_eager_addmv_xpu_float32",
        "test_variant_consistency_eager_baddbmm_xpu_complex64",
        "test_variant_consistency_eager_baddbmm_xpu_float32",
        "test_variant_consistency_eager_bmm_xpu_complex64",
        "test_variant_consistency_eager_cholesky_inverse_xpu_complex64",
        "test_variant_consistency_eager_cholesky_solve_xpu_complex64",
        "test_variant_consistency_eager_cholesky_xpu_complex64",
        "test_variant_consistency_eager_corrcoef_xpu_complex64",
        "test_variant_consistency_eager_cov_xpu_complex64",
        "test_variant_consistency_eager_einsum_xpu_complex64",
        "test_variant_consistency_eager_geqrf_xpu_complex64",
        "test_variant_consistency_eager_inner_xpu_complex64",
        "test_variant_consistency_eager_linalg_cholesky_ex_xpu_complex64",
        "test_variant_consistency_eager_linalg_cholesky_xpu_complex64",
        "test_variant_consistency_eager_linalg_cond_xpu_complex64",
        "test_variant_consistency_eager_linalg_det_singular_xpu_complex64",
        "test_variant_consistency_eager_linalg_det_xpu_complex64",
        "test_variant_consistency_eager_linalg_eig_xpu_complex64",
        "test_variant_consistency_eager_linalg_eigh_xpu_complex64",
        "test_variant_consistency_eager_linalg_eigvals_xpu_complex64",
        "test_variant_consistency_eager_linalg_eigvalsh_xpu_complex64",
        "test_variant_consistency_eager_linalg_householder_product_xpu_complex64",
        "test_variant_consistency_eager_linalg_inv_ex_xpu_complex64",
        "test_variant_consistency_eager_linalg_inv_xpu_complex64",
        "test_variant_consistency_eager_linalg_ldl_factor_ex_xpu_complex64",
        "test_variant_consistency_eager_linalg_ldl_factor_xpu_complex64",
        "test_variant_consistency_eager_linalg_ldl_solve_xpu_complex64",
        "test_variant_consistency_eager_linalg_lstsq_grad_oriented_xpu_complex64",
        "test_variant_consistency_eager_linalg_lstsq_xpu_complex64",
        "test_variant_consistency_eager_linalg_lu_factor_xpu_complex64",
        "test_variant_consistency_eager_linalg_lu_solve_xpu_complex64",
        "test_variant_consistency_eager_linalg_matrix_norm_xpu_complex64",
        "test_variant_consistency_eager_linalg_matrix_power_xpu_complex64",
        "test_variant_consistency_eager_linalg_matrix_rank_hermitian_xpu_complex64",
        "test_variant_consistency_eager_linalg_matrix_rank_xpu_complex64",
        "test_variant_consistency_eager_linalg_multi_dot_xpu_complex64",
        "test_variant_consistency_eager_linalg_norm_subgradients_at_zero_xpu_complex64",
        "test_variant_consistency_eager_linalg_norm_xpu_complex64",
        "test_variant_consistency_eager_linalg_pinv_hermitian_xpu_complex64",
        "test_variant_consistency_eager_linalg_pinv_singular_xpu_complex64",
        "test_variant_consistency_eager_linalg_pinv_xpu_complex64",
        "test_variant_consistency_eager_linalg_qr_xpu_complex64",
        "test_variant_consistency_eager_linalg_slogdet_xpu_complex64",
        "test_variant_consistency_eager_linalg_solve_ex_xpu_complex64",
        "test_variant_consistency_eager_linalg_solve_triangular_xpu_complex64",
        "test_variant_consistency_eager_linalg_solve_xpu_complex64",
        "test_variant_consistency_eager_linalg_svd_xpu_complex64",
        "test_variant_consistency_eager_linalg_svdvals_xpu_complex64",
        "test_variant_consistency_eager_linalg_tensorinv_xpu_complex64",
        "test_variant_consistency_eager_linalg_tensorsolve_xpu_complex64",
        "test_variant_consistency_eager_logdet_xpu_complex64",
        "test_variant_consistency_eager_lu_solve_xpu_complex64",
        "test_variant_consistency_eager_lu_xpu_complex64",
        "test_variant_consistency_eager_matmul_xpu_complex64",
        "test_variant_consistency_eager_mm_xpu_complex64",
        "test_variant_consistency_eager_mv_xpu_complex64",
        "test_variant_consistency_eager_nn_functional_linear_xpu_complex64",
        "test_variant_consistency_eager_norm_nuc_xpu_complex64",
        "test_variant_consistency_eager_ormqr_xpu_complex64",
        "test_variant_consistency_eager_pinverse_xpu_complex64",
        "test_variant_consistency_eager_qr_xpu_complex64",
        "test_variant_consistency_eager_svd_xpu_complex64",
        "test_variant_consistency_eager_tensordot_xpu_complex64",
        "test_variant_consistency_eager_triangular_solve_xpu_complex64",
        # oneDNN issues
        # RuntimeError: value cannot be converted to type float without overflow
        # https://github.com/intel/torch-xpu-ops/issues/683
        "test_conj_view_addbmm_xpu_complex64",
        "test_neg_conj_view_addbmm_xpu_complex128",
        ### Error #0 in TestMathBitsXPU , RuntimeError: Double and complex datatype matmul is not supported in oneDNN
        # https://github.com/intel/torch-xpu-ops/issues/254
        "test_conj_view___rmatmul___xpu_complex64",
        "test_conj_view__refs_linalg_svd_xpu_complex64",
        "test_conj_view_addmm_decomposed_xpu_complex64",
        "test_conj_view_addmm_xpu_complex64",
        "test_conj_view_addmv_xpu_complex64",
        "test_conj_view_addr_xpu_complex64",
        "test_conj_view_baddbmm_xpu_complex64",
        "test_conj_view_bmm_xpu_complex64",
        "test_conj_view_cholesky_inverse_xpu_complex64",
        "test_conj_view_cholesky_solve_xpu_complex64",
        "test_conj_view_cholesky_xpu_complex64",
        "test_conj_view_corrcoef_xpu_complex64",
        "test_conj_view_cov_xpu_complex64",
        "test_conj_view_einsum_xpu_complex64",
        "test_conj_view_geqrf_xpu_complex64",
        "test_conj_view_inner_xpu_complex64",
        "test_conj_view_linalg_cholesky_ex_xpu_complex64",
        "test_conj_view_linalg_cholesky_xpu_complex64",
        "test_conj_view_linalg_cond_xpu_complex64",
        "test_conj_view_linalg_det_singular_xpu_complex64",
        "test_conj_view_linalg_det_xpu_complex64",
        "test_conj_view_linalg_eig_xpu_complex64",
        "test_conj_view_linalg_eigh_xpu_complex64",
        "test_conj_view_linalg_eigvals_xpu_complex64",
        "test_conj_view_linalg_eigvalsh_xpu_complex64",
        "test_conj_view_linalg_householder_product_xpu_complex64",
        "test_conj_view_linalg_inv_ex_xpu_complex64",
        "test_conj_view_linalg_inv_xpu_complex64",
        "test_conj_view_linalg_ldl_factor_ex_xpu_complex64",
        "test_conj_view_linalg_ldl_factor_xpu_complex64",
        "test_conj_view_linalg_ldl_solve_xpu_complex64",
        "test_conj_view_linalg_lstsq_grad_oriented_xpu_complex64",
        "test_conj_view_linalg_lstsq_xpu_complex64",
        "test_conj_view_linalg_lu_factor_xpu_complex64",
        "test_conj_view_linalg_lu_solve_xpu_complex64",
        "test_conj_view_linalg_matrix_norm_xpu_complex64",
        "test_conj_view_linalg_matrix_power_xpu_complex64",
        "test_conj_view_linalg_matrix_rank_hermitian_xpu_complex64",
        "test_conj_view_linalg_matrix_rank_xpu_complex64",
        "test_conj_view_linalg_multi_dot_xpu_complex64",
        "test_conj_view_linalg_norm_subgradients_at_zero_xpu_complex64",
        "test_conj_view_linalg_norm_xpu_complex64",
        "test_conj_view_linalg_pinv_hermitian_xpu_complex64",
        "test_conj_view_linalg_pinv_singular_xpu_complex64",
        "test_conj_view_linalg_pinv_xpu_complex64",
        "test_conj_view_linalg_qr_xpu_complex64",
        "test_conj_view_linalg_slogdet_xpu_complex64",
        "test_conj_view_linalg_solve_ex_xpu_complex64",
        "test_conj_view_linalg_solve_triangular_xpu_complex64",
        "test_conj_view_linalg_solve_xpu_complex64",
        "test_conj_view_linalg_svd_xpu_complex64",
        "test_conj_view_linalg_svdvals_xpu_complex64",
        "test_conj_view_linalg_tensorinv_xpu_complex64",
        "test_conj_view_linalg_tensorsolve_xpu_complex64",
        "test_conj_view_logdet_xpu_complex64",
        "test_conj_view_lu_solve_xpu_complex64",
        "test_conj_view_lu_xpu_complex64",
        "test_conj_view_matmul_xpu_complex64",
        "test_conj_view_mm_xpu_complex64",
        "test_conj_view_mv_xpu_complex64",
        "test_conj_view_nn_functional_linear_xpu_complex64",
        "test_conj_view_norm_nuc_xpu_complex64",
        "test_conj_view_ormqr_xpu_complex64",
        "test_conj_view_pinverse_xpu_complex64",
        "test_conj_view_qr_xpu_complex64",
        "test_conj_view_svd_xpu_complex64",
        "test_conj_view_tensordot_xpu_complex64",
        "test_conj_view_triangular_solve_xpu_complex64",
        "test_neg_conj_view_addmm_decomposed_xpu_complex128",
        "test_neg_conj_view_addmm_xpu_complex128",
        "test_neg_conj_view_addmv_xpu_complex128",
        "test_neg_conj_view_addr_xpu_complex128",
        "test_neg_conj_view_baddbmm_xpu_complex128",
        "test_neg_conj_view_bmm_xpu_complex128",
        "test_neg_conj_view_cholesky_inverse_xpu_complex128",
        "test_neg_conj_view_cholesky_solve_xpu_complex128",
        "test_neg_conj_view_cholesky_xpu_complex128",
        "test_neg_conj_view_corrcoef_xpu_complex128",
        "test_neg_conj_view_cov_xpu_complex128",
        "test_neg_conj_view_geqrf_xpu_complex128",
        "test_neg_conj_view_inner_xpu_complex128",
        "test_neg_conj_view_linalg_cholesky_ex_xpu_complex128",
        "test_neg_conj_view_linalg_cholesky_xpu_complex128",
        "test_neg_conj_view_linalg_cond_xpu_complex128",
        "test_neg_conj_view_linalg_det_singular_xpu_complex128",
        "test_neg_conj_view_linalg_eig_xpu_complex128",
        "test_neg_conj_view_linalg_eigh_xpu_complex128",
        "test_neg_conj_view_linalg_eigvals_xpu_complex128",
        "test_neg_conj_view_linalg_eigvalsh_xpu_complex128",
        "test_neg_conj_view_linalg_householder_product_xpu_complex128",
        "test_neg_conj_view_linalg_inv_ex_xpu_complex128",
        "test_neg_conj_view_linalg_inv_xpu_complex128",
        "test_neg_conj_view_linalg_ldl_factor_ex_xpu_complex128",
        "test_neg_conj_view_linalg_ldl_factor_xpu_complex128",
        "test_neg_conj_view_linalg_ldl_solve_xpu_complex128",
        "test_neg_conj_view_linalg_lstsq_grad_oriented_xpu_complex128",
        "test_neg_conj_view_linalg_lstsq_xpu_complex128",
        "test_neg_conj_view_linalg_lu_factor_xpu_complex128",
        "test_neg_conj_view_linalg_lu_solve_xpu_complex128",
        "test_neg_conj_view_linalg_matrix_rank_hermitian_xpu_complex128",
        "test_neg_conj_view_linalg_matrix_rank_xpu_complex128",
        "test_neg_conj_view_linalg_multi_dot_xpu_complex128",
        "test_neg_conj_view_linalg_pinv_hermitian_xpu_complex128",
        "test_neg_conj_view_linalg_pinv_singular_xpu_complex128",
        "test_neg_conj_view_linalg_pinv_xpu_complex128",
        "test_neg_conj_view_linalg_qr_xpu_complex128",
        "test_neg_conj_view_linalg_solve_ex_xpu_complex128",
        "test_neg_conj_view_linalg_solve_triangular_xpu_complex128",
        "test_neg_conj_view_linalg_solve_xpu_complex128",
        "test_neg_conj_view_linalg_svdvals_xpu_complex128",
        "test_neg_conj_view_linalg_tensorinv_xpu_complex128",
        "test_neg_conj_view_linalg_tensorsolve_xpu_complex128",
        "test_neg_conj_view_lu_solve_xpu_complex128",
        "test_neg_conj_view_lu_xpu_complex128",
        "test_neg_conj_view_mm_xpu_complex128",
        "test_neg_conj_view_mv_xpu_complex128",
        "test_neg_conj_view_nn_functional_linear_xpu_complex128",
        "test_neg_conj_view_norm_nuc_xpu_complex128",
        "test_neg_conj_view_ormqr_xpu_complex128",
        "test_neg_conj_view_pinverse_xpu_complex128",
        "test_neg_conj_view_qr_xpu_complex128",
        "test_neg_conj_view_tensordot_xpu_complex128",
        "test_neg_conj_view_triangular_solve_xpu_complex128",
        "test_neg_view___rmatmul___xpu_float64",
        "test_neg_view__refs_linalg_svd_xpu_float64",
        "test_neg_view__refs_nn_functional_pdist_xpu_float64",
        "test_neg_view_addbmm_xpu_float64",
        "test_neg_view_addmm_decomposed_xpu_float64",
        "test_neg_view_addmm_xpu_float64",
        "test_neg_view_addmv_xpu_float64",
        "test_neg_view_addr_xpu_float64",
        "test_neg_view_baddbmm_xpu_float64",
        "test_neg_view_bmm_xpu_float64",
        "test_neg_view_cdist_xpu_float64",
        "test_neg_view_cholesky_inverse_xpu_float64",
        "test_neg_view_cholesky_solve_xpu_float64",
        "test_neg_view_cholesky_xpu_float64",
        "test_neg_view_corrcoef_xpu_float64",
        "test_neg_view_cov_xpu_float64",
        "test_neg_view_einsum_xpu_float64",
        "test_neg_view_geqrf_xpu_float64",
        "test_neg_view_inner_xpu_float64",
        "test_neg_view_linalg_cholesky_ex_xpu_float64",
        "test_neg_view_linalg_cholesky_xpu_float64",
        "test_neg_view_linalg_cond_xpu_float64",
        "test_neg_view_linalg_det_singular_xpu_float64",
        "test_neg_view_linalg_det_xpu_float64",
        "test_neg_view_linalg_eig_xpu_float64",
        "test_neg_view_linalg_eigh_xpu_float64",
        "test_neg_view_linalg_eigvals_xpu_float64",
        "test_neg_view_linalg_eigvalsh_xpu_float64",
        "test_neg_view_linalg_householder_product_xpu_float64",
        "test_neg_view_linalg_inv_ex_xpu_float64",
        "test_neg_view_linalg_inv_xpu_float64",
        "test_neg_view_linalg_ldl_factor_ex_xpu_float64",
        "test_neg_view_linalg_ldl_factor_xpu_float64",
        "test_neg_view_linalg_ldl_solve_xpu_float64",
        "test_neg_view_linalg_lstsq_grad_oriented_xpu_float64",
        "test_neg_view_linalg_lstsq_xpu_float64",
        "test_neg_view_linalg_lu_factor_xpu_float64",
        "test_neg_view_linalg_lu_solve_xpu_float64",
        "test_neg_view_linalg_matrix_norm_xpu_float64",
        "test_neg_view_linalg_matrix_power_xpu_float64",
        "test_neg_view_linalg_matrix_rank_hermitian_xpu_float64",
        "test_neg_view_linalg_matrix_rank_xpu_float64",
        "test_neg_view_linalg_multi_dot_xpu_float64",
        "test_neg_view_linalg_norm_subgradients_at_zero_xpu_float64",
        "test_neg_view_linalg_norm_xpu_float64",
        "test_neg_view_linalg_pinv_hermitian_xpu_float64",
        "test_neg_view_linalg_pinv_singular_xpu_float64",
        "test_neg_view_linalg_pinv_xpu_float64",
        "test_neg_view_linalg_qr_xpu_float64",
        "test_neg_view_linalg_slogdet_xpu_float64",
        "test_neg_view_linalg_solve_ex_xpu_float64",
        "test_neg_view_linalg_solve_triangular_xpu_float64",
        "test_neg_view_linalg_solve_xpu_float64",
        "test_neg_view_linalg_svd_xpu_float64",
        "test_neg_view_linalg_svdvals_xpu_float64",
        "test_neg_view_linalg_tensorinv_xpu_float64",
        "test_neg_view_linalg_tensorsolve_xpu_float64",
        "test_neg_view_logdet_xpu_float64",
        "test_neg_view_lu_solve_xpu_float64",
        "test_neg_view_lu_xpu_float64",
        "test_neg_view_matmul_xpu_float64",
        "test_neg_view_mm_xpu_float64",
        "test_neg_view_mv_xpu_float64",
        "test_neg_view_nn_functional_bilinear_xpu_float64",
        "test_neg_view_nn_functional_linear_xpu_float64",
        "test_neg_view_nn_functional_multi_head_attention_forward_xpu_float64",
        "test_neg_view_nn_functional_scaled_dot_product_attention_xpu_float64",
        "test_neg_view_norm_nuc_xpu_float64",
        "test_neg_view_ormqr_xpu_float64",
        "test_neg_view_pca_lowrank_xpu_float64",
        "test_neg_view_pinverse_xpu_float64",
        "test_neg_view_qr_xpu_float64",
        "test_neg_view_svd_lowrank_xpu_float64",
        "test_neg_view_svd_xpu_float64",
        "test_neg_view_tensordot_xpu_float64",
        "test_neg_view_triangular_solve_xpu_float64",
        "test_noncontiguous_samples_pca_lowrank_xpu_complex64",
        "test_noncontiguous_samples_svd_lowrank_xpu_complex64",
        "test_variant_consistency_eager_pca_lowrank_xpu_complex64",
        "test_variant_consistency_eager_svd_lowrank_xpu_complex64",
        "test_conj_view_pca_lowrank_xpu_complex64",
        "test_conj_view_svd_lowrank_xpu_complex64",
        "test_neg_conj_view_pca_lowrank_xpu_complex128",
        "test_neg_conj_view_svd_lowrank_xpu_complex128",
        # oneDNN issues
        ### Error #1 in TestMathBitsXPU , RuntimeError: could not create a primitive descriptor for a deconvolution forward propagation primitive
        # https://github.com/intel/torch-xpu-ops/issues/253
        "test_conj_view_nn_functional_conv_transpose2d_xpu_complex64",
        "test_conj_view_nn_functional_conv_transpose3d_xpu_complex64",
        "test_neg_view_nn_functional_conv_transpose2d_xpu_float64",
        "test_neg_view_nn_functional_conv_transpose3d_xpu_float64",
        # implemented aten::histogram to align MPS operators coverage, CUDA doesn't support
        # but test_dtypes infrastructure leverage CUDA supported datatypes
        "test_dtypes_histogram_xpu",
        # Unexpected success, CUDA got XFAIL because CUDA does not have historgramadd supported
        "test_errors_histogramdd_xpu",
        # 2025 bundle std::pow complex result is different on host and device
        "test_python_ref__refs_square_xpu_complex64",
        "test_python_ref_torch_fallback__refs_square_xpu_complex64",
        "test_python_ref_torch_fallback__refs_exp_xpu_complex128",
        # Failed on rolling driver, passed on preci
        "test_python_ref__refs_div_trunc_rounding_xpu_float64",
        "test_python_ref_executor__refs_div_trunc_rounding_executor_aten_xpu_float64",
        "test_python_ref_torch_fallback__refs_div_trunc_rounding_xpu_float64",
        # TODO: passed from source code building version, investigate
        "test_python_ref__refs_log2_xpu_complex128",
        # The following dtypes did not work in backward but are listed by the OpInfo: {torch.bfloat16}.
        "test_dtypes_fft_fft2_xpu",
        "test_dtypes_fft_fft_xpu",
        "test_dtypes_fft_fftn_xpu",
        "test_dtypes_fft_hfft2_xpu",
        "test_dtypes_fft_hfft_xpu",
        "test_dtypes_fft_hfftn_xpu",
        "test_dtypes_fft_ifft2_xpu",
        "test_dtypes_fft_ifft_xpu",
        "test_dtypes_fft_ifftn_xpu",
        "test_dtypes_fft_ihfft2_xpu",
        "test_dtypes_fft_ihfft_xpu",
        "test_dtypes_fft_ihfftn_xpu",
        "test_dtypes_fft_irfft2_xpu",
        "test_dtypes_fft_irfft_xpu",
        "test_dtypes_fft_irfftn_xpu",
        "test_dtypes_fft_rfft2_xpu",
        "test_dtypes_fft_rfft_xpu",
        "test_dtypes_fft_rfftn_xpu",
    ),
}
